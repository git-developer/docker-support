variables:
  DOWNSTREAM_PROJECT: ""
  DOCKER_REPOSITORY:  "${DOWNSTREAM_PROJECT}"
  APPLICATION_URL:    ""

stages:
- check
- trigger

check_for_update:
  stage: check
  image: alpine
  artifacts:
    paths:
    - trigger_build
  script:
  - |
    set -euo pipefail
    apk add coreutils jq
    echo "Docker repository: ${DOCKER_REPOSITORY}"
    case "${DOCKER_REPOSITORY}" in
      http*) repo_url="${DOCKER_REPOSITORY}" ;;
      *)     repo_url="https://hub.docker.com/v2/repositories/${DOCKER_REPOSITORY}" ;;
    esac
    app_date="$(wget -q --spider -S "${APPLICATION_URL}" 2>&1 | sed -nE 's/\s*Last-Modified: ([^\s].+)/"\1"/p' | xargs date +%s -d)"
    image_date="$(wget -q -O - "${repo_url}/tags" | jq -r '.results | max_by(.last_updated) | .last_updated' | xargs date +%s -d)"
    echo "Application:  $(date --utc -I -d "@${app_date}")"
    echo "Latest image: $(date --utc -I -d "@${image_date}")"
    if test "${app_date}" -gt "${image_date}"
    then
      echo "Outdated"
      touch trigger_build
    else
      echo "Up-to-date"
    fi

trigger_build:
  stage: trigger
  rules:
  - exists:
    - trigger_build
  script:
  - echo "Triggering build of ${DOWNSTREAM_PROJECT}"
#  trigger: "${DOWNSTREAM_PROJECT}"
